package com.example.jna;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\curl\curl.h:102</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class curl_httppost extends Structure {
	/**
	 * next entry in the list<br>
	 * C type : curl_httppost*
	 */
	public curl_httppost.ByReference next;
	/**
	 * pointer to allocated name<br>
	 * C type : char*
	 */
	public Pointer name;
	/** length of name length */
	public NativeLong namelength;
	/**
	 * pointer to allocated data contents<br>
	 * C type : char*
	 */
	public Pointer contents;
	/**
	 * length of contents field, see also<br>
	 * CURL_HTTPPOST_LARGE
	 */
	public NativeLong contentslength;
	/**
	 * pointer to allocated buffer contents<br>
	 * C type : char*
	 */
	public Pointer buffer;
	/** length of buffer field */
	public NativeLong bufferlength;
	/**
	 * Content-Type<br>
	 * C type : char*
	 */
	public Pointer contenttype;
	/**
	 * list of extra headers for this form<br>
	 * C type : curl_slist*
	 */
	public com.example.jna.curl_slist.ByReference contentheader;
	/**
	 * if one field name has more than one<br>
	 * file, this link should link to following<br>
	 * files<br>
	 * C type : curl_httppost*
	 */
	public curl_httppost.ByReference more;
	/** as defined below */
	public NativeLong flags;
	/**
	 * The file name to show. If not set, the<br>
	 * actual file name will be used (if this<br>
	 * is a file part)<br>
	 * C type : char*
	 */
	public Pointer showfilename;
	/**
	 * custom pointer used for<br>
	 * HTTPPOST_CALLBACK posts<br>
	 * C type : void*
	 */
	public Pointer userp;
	/**
	 * alternative length of contents<br>
	 * field. Used if CURL_HTTPPOST_LARGE is<br>
	 * set. Added in 7.46.0<br>
	 * C type : curl_off_t
	 */
	public NativeLong contentlen;
	public curl_httppost() {
		super();
	}

	protected List<String> getFieldOrder() {
		return Arrays.asList("next", "name", "namelength", "contents", "contentslength", "buffer", "bufferlength", "contenttype", "contentheader", "more", "flags", "showfilename", "userp", "contentlen");
	}
	public static class ByReference extends curl_httppost implements Structure.ByReference {
		
	};
	public static class ByValue extends curl_httppost implements Structure.ByValue {
		
	};
}
