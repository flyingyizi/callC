package com.example.jna;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * info about the certificate chain, only for OpenSSL, GnuTLS, Schannel, NSS<br>
 * and GSKit builds. Asked for with CURLOPT_CERTINFO / CURLINFO_CERTINFO<br>
 * <i>native declaration : include\curl\curl.h:2464</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class curl_certinfo extends Structure {
	/** number of certificates with information */
	public int num_of_certs;
	/**
	 * for each index in this array, there's a<br>
	 * linked list with textual information in the<br>
	 * format "name: value"<br>
	 * C type : curl_slist**
	 */
	public com.example.jna.curl_slist.ByReference[] certinfo;
	public curl_certinfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("num_of_certs", "certinfo");
	}
	/**
	 * @param num_of_certs number of certificates with information<br>
	 * @param certinfo for each index in this array, there's a<br>
	 * linked list with textual information in the<br>
	 * format "name: value"<br>
	 * C type : curl_slist**
	 */
	public curl_certinfo(int num_of_certs, com.example.jna.curl_slist.ByReference certinfo[]) {
		super();
		this.num_of_certs = num_of_certs;
		if ((certinfo.length != this.certinfo.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.certinfo = certinfo;
	}
	public static class ByReference extends curl_certinfo implements Structure.ByReference {
		
	};
	public static class ByValue extends curl_certinfo implements Structure.ByValue {
		
	};
}
