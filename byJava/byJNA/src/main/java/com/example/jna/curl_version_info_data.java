package com.example.jna;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.PointerByReference;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\curl\curl.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class curl_version_info_data extends Structure {
	/**
	 * @see CURLversion<br>
	 * age of the returned struct<br>
	 * C type : CURLversion
	 */
	public int age;
	/**
	 * LIBCURL_VERSION<br>
	 * C type : const char*
	 */
	public Pointer version;
	/** LIBCURL_VERSION_NUM */
	public int version_num;
	/**
	 * OS/host/cpu/machine when configured<br>
	 * C type : const char*
	 */
	public Pointer host;
	/** bitmask, see defines below */
	public int features;
	/**
	 * human readable string<br>
	 * C type : const char*
	 */
	public Pointer ssl_version;
	/** not used anymore, always 0 */
	public NativeLong ssl_version_num;
	/**
	 * human readable string<br>
	 * C type : const char*
	 */
	public Pointer libz_version;
	/**
	 * protocols is terminated by an entry with a NULL protoname<br>
	 * C type : const char**
	 */
	public PointerByReference protocols;
	/**
	 * The fields below this were added in CURLVERSION_SECOND<br>
	 * C type : const char*
	 */
	public Pointer ares;
	public int ares_num;
	/**
	 * This field was added in CURLVERSION_THIRD<br>
	 * C type : const char*
	 */
	public Pointer libidn;
	/** Same as '_libiconv_version' if built with HAVE_ICONV */
	public int iconv_ver_num;
	/**
	 * human readable string<br>
	 * C type : const char*
	 */
	public Pointer libssh_version;
	/**
	 * These fields were added in CURLVERSION_FIFTH<br>
	 * Numeric Brotli version<br>
	 * (MAJOR << 24) | (MINOR << 12) | PATCH
	 */
	public int brotli_ver_num;
	/**
	 * human readable string.<br>
	 * C type : const char*
	 */
	public Pointer brotli_version;
	/**
	 * These fields were added in CURLVERSION_SIXTH<br>
	 * Numeric nghttp2 version<br>
	 * (MAJOR << 16) | (MINOR << 8) | PATCH
	 */
	public int nghttp2_ver_num;
	/**
	 * human readable string.<br>
	 * C type : const char*
	 */
	public Pointer nghttp2_version;
	/**
	 * human readable quic (+ HTTP/3) library +<br>
	 * version or NULL<br>
	 * C type : const char*
	 */
	public Pointer quic_version;
	/**
	 * These fields were added in CURLVERSION_SEVENTH<br>
	 * the built-in default CURLOPT_CAINFO, might<br>
	 * be NULL<br>
	 * C type : const char*
	 */
	public Pointer cainfo;
	/**
	 * the built-in default CURLOPT_CAPATH, might<br>
	 * be NULL<br>
	 * C type : const char*
	 */
	public Pointer capath;
	public curl_version_info_data() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("age", "version", "version_num", "host", "features", "ssl_version", "ssl_version_num", "libz_version", "protocols", "ares", "ares_num", "libidn", "iconv_ver_num", "libssh_version", "brotli_ver_num", "brotli_version", "nghttp2_ver_num", "nghttp2_version", "quic_version", "cainfo", "capath");
	}
	public static class ByReference extends curl_version_info_data implements Structure.ByReference {
		
	};
	public static class ByValue extends curl_version_info_data implements Structure.ByValue {
		
	};
}
