package com.example.jna;
import com.ochafik.lang.jnaerator.runtime.NativeSize;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\curl\curl.h:706</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class curl_khkey extends Structure {
	/**
	 * points to a zero-terminated string encoded with base64<br>
	 * if len is zero, otherwise to the "raw" data<br>
	 * C type : const char*
	 */
	public Pointer key;
	public NativeSize len;
	/**
	 * @see curl_khtype<br>
	 * C type : curl_khtype
	 */
	public int keytype;
	public curl_khkey() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("key", "len", "keytype");
	}
	/**
	 * @param key points to a zero-terminated string encoded with base64<br>
	 * if len is zero, otherwise to the "raw" data<br>
	 * C type : const char*<br>
	 * @param keytype @see curl_khtype<br>
	 * C type : curl_khtype
	 */
	public curl_khkey(Pointer key, NativeSize len, int keytype) {
		super();
		this.key = key;
		this.len = len;
		this.keytype = keytype;
	}
	public static class ByReference extends curl_khkey implements Structure.ByReference {
		
	};
	public static class ByValue extends curl_khkey implements Structure.ByValue {
		
	};
}
